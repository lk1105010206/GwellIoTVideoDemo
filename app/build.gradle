apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


def BUILD_TIME = new Date().format("MMddHHmm")

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.tencentcs.iotvideodemo"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }

    }

    signingConfigs {
        release {
            Properties properties = new Properties()
            //加载本地local.properties文件
            if (rootProject.file('local.properties').exists()) {
                properties.load(rootProject.file("local.properties").newDataInputStream())
                if (properties.get("storeFile") != null) {
                    storeFile file(properties.get("storeFile"))
                    storePassword properties.get("storePassword")
                    keyAlias properties.get("keyAlias")
                    keyPassword properties.get("keyPassword")
                }
            } else {
                println("IoTVideo -> buildTypes -> release: using default key")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    //定制output的apk文件名
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def productName = "IoTVideo"
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def channelName = "tencents"
                def versionName = defaultConfig.versionName
                def fileName = "${productName}_${channelName}_V${versionName}_${BUILD_TIME}.apk"
                outputFileName = fileName
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs '../libs'
        }
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.30'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.3'

    // cloud player
    implementation project(":ijkplayer-java")
    // account
    implementation project(":accountmgrtc")
    //IoTVideo core
    implementation (name: "iotvideo-release", ext: 'aar')
    // aec
    implementation (name: "txtraevoip-release", ext: 'aar')
    //增值业务
    implementation (name: "vas-release", ext: 'aar')


    implementation 'com.google.zxing:core:3.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    //google open source
    implementation "com.android.support:design:29.0.0"
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    //third party software
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //exoplayer
    implementation 'com.google.android.exoplayer:exoplayer:2.12.1'

    //xCrash 能为安卓 app 提供捕获 java 崩溃，native 崩溃和 ANR 的能力。不需要 root 权限或任何系统权限。
    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.0.0'
}